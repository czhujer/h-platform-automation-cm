# https://github.com/coreos/coreos-vagrant
# https://github.com/kaarolch/kubespray/blob/master/Vagrantfile

# https://coreos.com/os/docs/latest/cloud-config.html#write_files
# https://coreos.com/ignition/docs/latest/examples.html#create-files-on-the-root-filesystem

# Size of the cluster created by Vagrant
num_instances=1

# Change basename of the VM
instance_name_prefix="hpa-coreos"

require 'json'

Vagrant.require_version ">= 2.0.0"

ignition_file = File.join(File.dirname(__FILE__), 'config-owncloudstack.ign')

Vagrant.configure("2") do |config|
  # always use Vagrants insecure key
  config.ssh.insert_key = false

  # Official CoreOS channel from which updates should be downloaded
  #update_channel='stable'
  #config.vm.box_version = ">= 1122.0.0"
  #config.vm.box_url = "http://%s.release.core-os.net/amd64-usr/current/coreos_production_vagrant.json" % update_channel

  config.vm.box = "coreos_stable_prod"

  config.ssh.username = "core"

  config.vm.provider :libvirt do |v|
    v.memory = 1024
    v.cpus = 2

    v.qemuargs :value => '-fw_cfg'
    v.qemuargs :value => "name=opt/com.coreos/config,file=#{ignition_file}"
  end

  # plugin conflict
  if Vagrant.has_plugin?("vagrant-vbguest") then
    config.vbguest.auto_update = false
  end

  # Set up each box
  (1..num_instances).each do |i|
    vm_name = "%s-%02d" % [instance_name_prefix, i]

    config.vm.define vm_name do |host|
      host.vm.hostname = vm_name

      # add docker-compose binary
      host.vm.provision :shell,
        :inline => 'mkdir -p /opt/bin; curl -s -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-Linux-x86_64 > /opt/bin/docker-compose; echo $?',
        :privileged => true

      host.vm.provision :shell,
        :inline => 'chmod 755 /opt/bin/docker-compose; echo $?',
        :privileged => true

      # add docker-compose files
      host.vm.provision :file,
        :source => "docker-compose/owncloudstack.yaml",
        :destination => "/tmp/vagrantfile-dockercompose"
      host.vm.provision :shell,
        :inline => "mkdir -p /opt/docker/compose/owncloudstack; mv /tmp/vagrantfile-dockercompose /opt/docker/compose/owncloudstack/docker-compose.yaml",
        :privileged => true

      host.vm.provision :file,
        :source => "nginx-conf/nginx.conf",
        :destination => "/tmp/vagrantfile-nginx"

      host.vm.provision :shell,
        :inline => "mkdir -p /opt/docker/compose/owncloudstack/nginx-conf; mv /tmp/vagrantfile-nginx /opt/docker/compose/owncloudstack/nginx-conf/nginx.conf",
        :privileged => true

$script_compose_env = <<SCRIPT2
(
cat <<-EOF2
MYSQL_ROOT_PASSWORD=your_root_password
MYSQL_USER=your_wordpress_database_user
MYSQL_PASSWORD=your_wordpress_database_password
EOF2
) | tee /opt/docker/compose/owncloudstack/.env
SCRIPT2

      host.vm.provision "create-env", type: "shell", inline: $script_compose_env, privileged: true

      # add configuration
      host.vm.provision :file, :source => "coreos-owncloudstack.yaml", :destination => "/tmp/vagrantfile-user-data"
      host.vm.provision :shell, :inline => "mv /tmp/vagrantfile-user-data /var/lib/coreos-vagrant/", :privileged => true

$script_status = <<SCRIPT3
echo "Showing status of owncloudstack compose..."
cd /opt/docker/compose/owncloudstack && docker-compose ps
SCRIPT3

      host.vm.provision "status", type: "shell", inline: $script_status, privileged: true

    end
  end
end
